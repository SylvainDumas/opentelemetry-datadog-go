name: Build

on:
  push:
    branches:
      - main
      - feats/propagator_start
  pull_request:
    types: [opened, synchronize, reopened]
      
env:
  # Go compiler
  GO_VERSION: 1.16
  CGO_ENABLED: 0
  GO_REPORT_COVERAGE_FILE: .report_coverage.out
  GO_REPORT_TEST_FILE: .report_tests.json
  # Sonarqube
  SONAR_SCANNER_VERSION: '4.7.0.2747'
  SONAR_HOST_URL: 'https://sonarcloud.io'

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Setup source code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Setup Go
      - name: 'Setup Go: Setup version ${{ env.GO_VERSION }}'
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 'Setup Go: Module cache'
        uses: actions/cache@v3
        id: go-cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: 'Setup Go: Download dependencies'
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: go mod download

      # Test
      - name: 'Test: Vet'
        run: go vet ./...
      - name: 'Test: Unit test'
        run: go test -vet=off -coverprofile ${{ env.GO_REPORT_COVERAGE_FILE }} -json ./... 2>&1 | tee ${{ env.GO_REPORT_TEST_FILE }}

      # Sonarqube
      - name: 'SonarQube: Setup scanner ${{ env.SONAR_SCANNER_VERSION }}'
        uses: warchant/setup-sonar-scanner@v3
        with:
          version: ${{ env.SONAR_SCANNER_VERSION }}
      - name: 'SonarQube: Cache packages'
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: 'SonarQube: Analyze'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.go.coverage.reportPaths=${{ env.GO_REPORT_COVERAGE_FILE }}
          -Dsonar.go.tests.reportPaths=${{ env.GO_REPORT_TEST_FILE }}
